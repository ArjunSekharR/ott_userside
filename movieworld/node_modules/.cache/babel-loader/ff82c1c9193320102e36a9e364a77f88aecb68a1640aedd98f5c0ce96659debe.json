{"ast":null,"code":"var _jsxFileName = \"D:\\\\OTT Userside\\\\movieworld\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Style/Login.css';\nimport Navbar from './Navbar';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  function Login() {\n    const loginuser = {\n      email: email,\n      password: password\n    };\n    axios.post('http://127.0.0.1:8000/api_ott/loginapi/', loginuser).then(response => {\n      setErrorMessage('');\n      navigate('/movielist');\n    }).catch(error => {\n      if (error.response && error.response.data && error.response.data.errors) {\n        setErrorMessage(Object.values(error.response.data.errors).join(' '));\n      } else if (error.response.data.message) {\n        setErrorMessage(error.response.data.message);\n      } else {\n        setErrorMessage('Failed to login user. Please contact admin');\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Login, \"SMX5mde/k+Ns1SOhB9S7OHKgt7c=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Navbar","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","email","setEmail","password","setPassword","errorMessage","setErrorMessage","navigate","loginuser","post","then","response","catch","error","data","errors","Object","values","join","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/OTT Userside/movieworld/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Style/Login.css';\r\nimport Navbar from './Navbar';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction Login() {\r\n    const[email, setEmail] = useState(\"\")\r\n    const[password,setPassword]=useState(\"\")\r\n    const[errorMessage, setErrorMessage]=useState(\"\")\r\n    const navigate = useNavigate();\r\n    function Login(){\r\n        const loginuser = {\r\n            email:email,\r\n            password:password,\r\n        };\r\n        axios.post('http://127.0.0.1:8000/api_ott/loginapi/',loginuser)\r\n        .then(response=>{\r\n            setErrorMessage('')\r\n            navigate('/movielist')\r\n        }).catch(error => {\r\n            if (error.response && error.response.data && error.response.data.errors) {\r\n                setErrorMessage(Object.values(error.response.data.errors).join(' '));\r\n            } else if(error.response.data.message){\r\n                setErrorMessage(error.response.data.message)\r\n            }else{\r\n                setErrorMessage('Failed to login user. Please contact admin')\r\n         }\r\n});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n           \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB;AAC1B,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAK,CAACY,QAAQ,EAACC,WAAW,CAAC,GAACb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAK,CAACc,YAAY,EAAEC,eAAe,CAAC,GAACf,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAMgB,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,SAASM,KAAKA,CAAA,EAAE;IACZ,MAAMS,SAAS,GAAG;MACdP,KAAK,EAACA,KAAK;MACXE,QAAQ,EAACA;IACb,CAAC;IACDT,KAAK,CAACe,IAAI,CAAC,yCAAyC,EAACD,SAAS,CAAC,CAC9DE,IAAI,CAACC,QAAQ,IAAE;MACZL,eAAe,CAAC,EAAE,CAAC;MACnBC,QAAQ,CAAC,YAAY,CAAC;IAC1B,CAAC,CAAC,CAACK,KAAK,CAACC,KAAK,IAAI;MACd,IAAIA,KAAK,CAACF,QAAQ,IAAIE,KAAK,CAACF,QAAQ,CAACG,IAAI,IAAID,KAAK,CAACF,QAAQ,CAACG,IAAI,CAACC,MAAM,EAAE;QACrET,eAAe,CAACU,MAAM,CAACC,MAAM,CAACJ,KAAK,CAACF,QAAQ,CAACG,IAAI,CAACC,MAAM,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC,CAAC;MACxE,CAAC,MAAM,IAAGL,KAAK,CAACF,QAAQ,CAACG,IAAI,CAACK,OAAO,EAAC;QAClCb,eAAe,CAACO,KAAK,CAACF,QAAQ,CAACG,IAAI,CAACK,OAAO,CAAC;MAChD,CAAC,MAAI;QACDb,eAAe,CAAC,4CAA4C,CAAC;MACpE;IACT,CAAC,CAAC;EACE;EAEA,oBACIV,OAAA,CAAAE,SAAA;IAAAsB,QAAA,eACIxB,OAAA,CAACJ,MAAM;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAEZ,CAAC;AAEX;AAACxB,EAAA,CA/BQD,KAAK;EAAA,QAION,WAAW;AAAA;AAAAgC,EAAA,GAJvB1B,KAAK;AAiCd,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}